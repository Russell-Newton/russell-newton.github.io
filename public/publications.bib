@inproceedings{Newton2024,
    doi={https://doi.org/10.1007/978-3-031-71918-9_16},
    author={Russell Newton and Athanassios Economou},
    editor={Gero, John S.},
    title={Redefining Line Maximization},
    booktitle={Design Computing and Cognition'24},
    year={2024},
    publisher={Springer Nature Switzerland},
    pages={250--264},
    abstract={The process of line maximization, reducing overlapping lines in a design into the fewest maximal lines possible, is critical to the embed-fuse cycle implemented in a shape grammar interpreter. The choice of how to represent maximal lines internally within a shape grammar interpreter influences how line maximization is performed computationally. A common strategy in existing interpreters, representing maximal lines by their endpoints, is critiqued, and a new representation that enables simpler and faster computation is devised. An implementation of line maximization using the new representation is compared to the endpoint-based implementation in Shape Machine for Rhino, a general purpose 2D shape grammar interpreter, for correctness and efficiency.},
    isbn={978-3-031-71918-9},
}

@article{Economou2024,
    title = {Shape meets Euclid: Integrating shape computation with ruler and compass procedures},
    journal = {Automation in Construction},
    volume = {165},
    pages = {105562},
    year = {2024},
    issn = {0926-5805},
    doi = {https://doi.org/10.1016/j.autcon.2024.105562},
    url = {https://www.sciencedirect.com/science/article/pii/S092658052400298X},
    author = {Athanassios Economou, Tzu-Chieh Kurt Hong and Russell Newton},
    keywords = {Shape grammars, Shape grammar interpreter, Shape embedding, Shape computation, Line descriptor, Intersection of line descriptors, Registration points, Euclid construction},
    abstract = {The recent success of a class of mechanical applications of shape rules in CAD shape grammar interpreters has produced a renewed interest in the design and support of shape embedding and shape rewrite technologies. Despite this, some fundamental constructions in rule-based modeling, namely, any of Euclid's straightedge and compass constructions, appear awkward to simulate within the fuse-embed cycle of a shape grammar interpreter. It is suggested here that this problem of modeling Euclid's straightedge and compass constructions can be efficiently addressed with the introduction of a new schema rule leveraging symbolic representations of shape. Two applications based on the usage of three instances of this schema rule are given to show the simulation of straightedge and compass constructions in a general purpose 2D CAD shape grammar interpreter, the Shape Machine for Rhino. A reflection upon the usage of rule schemas in shape grammar interpreters is given in the end.},
}
